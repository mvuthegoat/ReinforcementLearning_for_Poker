#include <bits/stdc++.h>
#include "../include/InfoSet.h"
#include "../include/KuhnTrainer.h"
#include "../include/BestResponse.h"

using namespace std;
 
constexpr char nl = '\n';

int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	KuhnTrainer trainer;
	int num_iter = 100000;
	string algo = "discounted_cfr";

	// set param for discounted_cfr
	trainer.set_param(1.5, 0.5, 2);
	double util = trainer.train(num_iter, algo);
	cout << "Avg game value: " << fixed << setprecision(5) << util / num_iter << nl;
	cout << "Nash equilibrium strategy (generated by CFR):\n";
	cout << "Game_State  PASS    BET" << nl;

	for (auto [name, infoset] : trainer.infoset_map) {
		cout << name << "         ";
		for (auto prob : infoset.get_average_strategy()) {
			cout << prob << "  ";
		}
		cout << nl;
	}

	BestResponse br;
	cout << "EXPLOITABILITY: " << fixed << setprecision(5) << abs(br.get_exploitability(trainer)) << nl;
	cout << "Best Response strategy for both players:\n";
	cout << "Game_State   ev_PASS   ev_BET" << nl;
	for (auto [name, infoset] : br.br_strat_map) {
		cout << name << "           ";
		for (auto prob : infoset) {
			cout << prob << "  ";
		}
		cout << nl;
	} 

	return 0;
}
